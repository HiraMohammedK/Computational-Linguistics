# -*- coding: utf-8 -*-
"""wsd-naive-bayes.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uBRzxKL9QQR4UOui3dvOLA_c6_nrRlQo
"""

import math

training_data = [
    ("I love fish. The smoked bass fish was delicious.", "fish"),
    ("The bass fish swam along the line.", "fish"),
    ("He hauled in a big catch of smoked bass fish.", "fish"),
    ("The bass guitar player played a smooth jazz line.", "guitar"),
]

vocab = set()
for sentence, _ in training_data:
    vocab.update(sentence.lower().split())

word_counts = {"fish": {}, "guitar": {}}
sense_counts = {"fish": 0, "guitar": 0}

for sentence, sense in training_data:
    words = sentence.lower().split()
    sense_counts[sense] += len(words)
    for word in words:
        if word not in word_counts[sense]:
            word_counts[sense][word] = 0
        word_counts[sense][word] += 1

total_senses = sum(sense_counts.values())
prior_probs = {sense: sense_count / total_senses for sense, sense_count in sense_counts.items()}

vocab_size = len(vocab)

def get_conditional_prob(word, sense):
    count_w_c = word_counts[sense].get(word, 0) + 1
    count_c = sense_counts[sense] + vocab_size
    return count_w_c / count_c

test_sentence = "He loves jazz. The bass line provided the foundation for the guitar solo in the jazz piece"
test_word = "bass"

sentence_words = test_sentence.lower().split()
sense_probs = {}

for sense in prior_probs:
    prob = math.log(prior_probs[sense])
    for word in sentence_words:
        prob += math.log(get_conditional_prob(word, sense))
    sense_probs[sense] = prob

predicted_sense = max(sense_probs, key=sense_probs.get)
print(f"Test Word: {test_word}")
print(f"Predicted Sense: {predicted_sense}")