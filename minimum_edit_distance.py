# -*- coding: utf-8 -*-
"""minimum-edit-distance.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rpfH_BUecUw7vpbcS4kG1qdGI_jMOZ6g
"""

def min_edit_distance(str1, str2):
    m = len(str1)
    n = len(str2)
    dp = [[0 for _ in range(n + 1)] for _ in range(m + 1)]

    for i in range(m + 1):
        dp[i][0] = i
    for j in range(n + 1):
        dp[0][j] = j

    for i in range(1, m + 1):
        for j in range(1, n + 1):
            if str1[i - 1] == str2[j - 1]:
                dp[i][j] = dp[i - 1][j - 1]
            else:
                dp[i][j] = min(dp[i - 1][j] + 1,
                               dp[i][j - 1] + 1,
                               dp[i - 1][j - 1] + 2)

    i, j = m, n
    operations = []

    while i > 0 or j > 0:
        if i > 0 and j > 0 and str1[i - 1] == str2[j - 1]:
            i -= 1
            j -= 1
        elif i > 0 and j > 0 and dp[i][j] == dp[i - 1][j - 1] + 2:
            operations.append(f"Substitute '{str1[i - 1]}' with '{str2[j - 1]}' (cost 2)")
            i -= 1
            j -= 1
        elif i > 0 and dp[i][j] == dp[i - 1][j] + 1:
            operations.append(f"Delete '{str1[i - 1]}' (cost 1)")
            i -= 1
        else:
            operations.append(f"Insert '{str2[j - 1]}' (cost 1)")
            j -= 1

    return dp[m][n], operations[::-1]

str1 = "intention"
str2 = "execution"
distance, edit_operations = min_edit_distance(str1, str2)

print(f"Edit Distance: {distance}")
print("Edit Operations:")
for operation in edit_operations:
    print(operation)