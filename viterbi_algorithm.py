# -*- coding: utf-8 -*-
"""viterbi-algorithm.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HW7gsSDV1_pX-1ZqkIYSDQqpqw2DoJL2
"""

import numpy as np

def viterbi_algorithm(observations, states, start_probs, trans_probs, emit_probs):
    T = len(observations)
    N = len(states)
    viterbi = np.zeros((N, T))
    backpointer = np.zeros((N, T), dtype=int)
    state_to_idx = {state: idx for idx, state in enumerate(states)}
    obs_to_idx = {obs: idx for idx, obs in enumerate(observations)}

    for s in range(N):
        viterbi[s, 0] = start_probs[states[s]] * emit_probs[states[s]].get(observations[0], 1e-6)
        backpointer[s, 0] = 0

    for t in range(1, T):
        for s in range(N):
            max_prob, max_state = max(
                (viterbi[s_prev, t - 1] * trans_probs[states[s_prev]].get(states[s], 1e-6) *
                 emit_probs[states[s]].get(observations[t], 1e-6), s_prev) for s_prev in range(N)
            )
            viterbi[s, t] = max_prob
            backpointer[s, t] = max_state

    best_last_state = np.argmax(viterbi[:, T - 1])
    best_path_prob = viterbi[best_last_state, T - 1]
    best_path = [best_last_state]
    for t in range(T - 1, 0, -1):
        best_last_state = backpointer[best_last_state, t]
        best_path.insert(0, best_last_state)

    best_path = [states[state] for state in best_path]
    return best_path, best_path_prob


states = ["NN", "VB", "JJ", "RB"]
observations = ["time", "flies", "fast"]
start_probability = {"NN": 0.5, "VB": 0.25, "JJ": 0.25, "RB": 0}
transition_probability = {
    "NN": {"NN": 0.25, "VB": 0.25, "JJ": 0.5, "RB": 0, "STOP": 0.1},
    "VB": {"NN": 0.25, "VB": 0.25, "JJ": 0.25, "RB": 0.25, "STOP": 0.1},
    "JJ": {"NN": 0, "VB": 0.75, "JJ": 0.25, "RB": 0, "STOP": 0.1},
    "RB": {"NN": 0.5, "VB": 0.25, "JJ": 0.25, "RB": 0, "STOP": 0.1},
}
emission_probability = {
    "NN": {"time": 0.1, "flies": 0.01, "fast": 0.01},
    "VB": {"time": 0.01, "flies": 0.1, "fast": 0.01},
    "JJ": {"time": 0, "flies": 0, "fast": 0.1},
    "RB": {"time": 0, "flies": 0, "fast": 0.1},
}

best_path, best_path_prob = viterbi_algorithm(observations, states, start_probability, transition_probability, emission_probability)
print("Most probable POS tag sequence:", best_path)
print("Probability of the sequence:", best_path_prob)