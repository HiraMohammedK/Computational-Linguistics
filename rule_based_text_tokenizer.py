# -*- coding: utf-8 -*-
"""rule-based-text-tokenizer.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1iqdBFShpZ8uurpnuQRwn5FbWQKQZwniw
"""

import re

def tokenize(text):
    pattern = r"""(?x)
                  (?:[A-Za-z]\.){2,}           # Match abbreviations like U.S.A.
                | (?:\w+(?:-\w+)+)             # Match hyphenated words like ice-cream
                | \b\w+'\w+\b                  # Match contractions like can't, it's, isn't
                | \b\w+\b                      # Match standalone words
                | [\.,!?;:]                    # Match punctuation
                | [^ \t\n]+                    # Match any remaining non-whitespace characters
                """

    tokens = re.findall(pattern, text)
    processed_tokens = []
    for token in tokens:
        if token.lower() == "can't":
            processed_tokens.extend(["can", "'t"])
        elif re.match(r"\b\w+n't\b", token):
            processed_tokens.append(token[:-3])
            processed_tokens.append("n't")
        elif re.match(r"\b\w+('\w+)\b", token):
            processed_tokens.append(token[:-2])
            processed_tokens.append(token[-2:])
        else:
            processed_tokens.append(token)

    return processed_tokens

text = "I can't believe it's already October! U.S.A. has ice-cream and isn't it great?"
tokens = tokenize(text)
print(tokens)